apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm-charts.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "helm-charts.name" . }}
    helm.sh/chart: {{ include "helm-charts.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "helm-charts.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "helm-charts.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: mongodb-root-password
              valueFrom:
                secretKeyRef:
                  name: mongodb
                  key: mongodb-root-password

          livenessProbe:
            httpGet:
              path: /v1/live
              port: 8080
            initialDelaySeconds: 90
          readinessProbe:
            httpGet:
              path: /v1/ready
              port: 8080
            initialDelaySeconds: 90

